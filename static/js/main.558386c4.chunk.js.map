{"version":3,"sources":["components/GameCard/GameCard.js","components/Wrapper/Wrapper.js","components/Title/Title.js","components/CardContainer/CardContainer.js","App.js","index.js"],"names":["GameCard","props","react_default","a","createElement","className","onClick","cardClick","id","alt","name","src","image","Wrapper","children","TitleBar","score","message","CardContainer","App","state","cards","clickedCards","console","log","_this","includes","setState","shuffleCards","push","array","j","temp","i","length","Math","floor","random","_this2","this","components_Wrapper_Wrapper","Title_Title","components_CardContainer_CardContainer","map","card","components_GameCard_GameCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"irFAWeA,SARE,SAAAC,GAAK,OACpBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,UAAUN,EAAMO,MACzDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,YCDxBC,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCY1CC,SAZE,SAAAd,GAAK,OACpBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,gBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,UAAkCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASJ,EAAMe,SAEnEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAiBJ,EAAMgB,aCL5BC,SAFO,SAAAjB,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaJ,EAAMa,mBCkGlDK,oNA3FbC,MAAQ,CACNC,QACAC,aAAc,GACdN,MAAO,EACPC,QAAS,8EAIXV,UAAY,SAAAC,GACVe,QAAQC,IAAIhB,GAGPiB,EAAKL,MAAME,aAAaI,SAASlB,IAgCpCe,QAAQC,IAAI,oCACZC,EAAKE,SACH,CACEN,MAAOI,EAAKG,aAAaH,EAAKL,MAAMC,OACpCC,aAAc,GACdN,MAAO,EACPC,QAAS,wDApCbQ,EAAKL,MAAME,aAAaO,KAAKrB,GAE7BiB,EAAKE,SACH,CACEN,MAAOI,EAAKG,aAAaH,EAAKL,MAAMC,OACpCL,MAAOS,EAAKL,MAAMJ,MAAQ,EAC1BC,QAAS,YAEX,WAG2B,KAArBQ,EAAKL,MAAMJ,QACbO,QAAQC,IAAI,kBAEZC,EAAKE,SACH,CACEN,MAAOI,EAAKG,aAAaH,EAAKL,MAAMC,OACpCC,aAAc,GACdN,MAAO,EACPC,QAAS,qCAuBvBW,aAAe,SAAAE,GACb,IAAsBC,EAAGC,EAArBC,EAAIH,EAAMI,OACd,GAAU,IAAND,EAAS,OAAOH,EACpB,OAASG,GACPF,EAAII,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IACpCD,EAAOF,EAAMG,GACbH,EAAMG,GAAKH,EAAMC,GACjBD,EAAMC,GAAKC,EAEb,OAAOF,2EAGA,IAAAQ,EAAAC,KACP,OACErC,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAD,CACEzB,MAAOuB,KAAKnB,MAAMJ,MAClBC,QAASsB,KAAKnB,MAAMH,UAEtBf,EAAAC,EAAAC,cAACsC,EAAD,KACCH,KAAKX,aAAaW,KAAKnB,MAAMC,OAAOsB,IAAI,SAAAC,GAAI,OAC3C1C,EAAAC,EAAAC,cAACyC,EAAD,CACEtC,UAAW+B,EAAK/B,UAChBC,GAAIoC,EAAKpC,GACTsC,IAAKF,EAAKpC,GACVE,KAAMkC,EAAKlC,KACXE,MAAOgC,EAAKhC,mBApFNmC,oBCFlBC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.558386c4.chunk.js","sourcesContent":["import React from 'react';\nimport './GameCard.css';\n\nconst GameCard = props => (\n  <div className=\"card\" onClick={() => props.cardClick(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image}/>\n    </div>\n  </div>\n);\n\nexport default GameCard;","import React from 'react';\r\nimport './Wrapper.css';\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;","import React from 'react';\r\nimport './Title.css';\r\n\r\nconst TitleBar = props => (\r\n  <div className=\"title-bar\">\r\n    <div className=\"header\">\r\n      <h2 className=\"title\">Gundam-React</h2>\r\n      <h2 className=\"scoreboard\">Score: <span className=\"score\">{props.score}</span></h2>\r\n    </div>\r\n    <div className=\"board\">\r\n      <h2 className=\"message-board\">{props.message}</h2>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default TitleBar;","import React from 'react';\r\nimport './CardContainer.css'\r\n\r\nconst CardContainer = props => <div className=\"container\">{props.children}</div>;\r\n\r\nexport default CardContainer;","import React, {Component} from 'react';\nimport GameCard from './components/GameCard';\nimport Wrapper from './components/Wrapper';\nimport TitleBar from './components/Title';\nimport CardContainer from './components/CardContainer';\nimport cards from './cards';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    cards,\n    clickedCards: [],\n    score: 0,\n    message: 'Click on a Card to begin playing; but don\\'t select a Card more than once'\n  };\n\n  // When you click on a card... it grabs the card id\n  cardClick = id => {\n    console.log(id);\n\n    // If the card that has not been clicked before, it is added to the clickedCards Array.\n    if (!this.state.clickedCards.includes(id)) {\n\n      this.state.clickedCards.push(id);\n      // State is Changed to update the score.\n      this.setState(\n        {\n          cards: this.shuffleCards(this.state.cards),\n          score: this.state.score + 1,\n          message: 'Correct!'\n        },\n        () => {\n          // If you have reached the end of the game (all the cards have been successfully clicked, the game\n          // resets and displays a new message.\n          if (this.state.score === 12) {\n            console.log('Game Completed');\n\n            this.setState(\n              {\n                cards: this.shuffleCards(this.state.cards),\n                clickedCards: [],\n                score: 0,\n                message: 'Congratulations! You Won!'\n              }\n            )\n          }\n        }\n      );\n      // console.log(this.state.clickedCards);\n      // console.log(this.state.score)\n    }\n    // If you have already clicked on a card... the score is reset to 0, and the game is over/resets\n    else {\n      console.log('You Already Clicked that Card...');\n      this.setState(\n        {\n          cards: this.shuffleCards(this.state.cards),\n          clickedCards: [],\n          score: 0,\n          message: 'Incorrect! You have already selected that card...'\n        }\n      )\n    }\n  };\n\n  shuffleCards = array => {\n    let i = array.length, j, temp;\n    if (i === 0) return array;\n    while (--i) {\n      j = Math.floor(Math.random() * (i + 1));\n      temp = array[i];\n      array[i] = array[j];\n      array[j] = temp\n    }\n    return array\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <TitleBar\n          score={this.state.score}\n          message={this.state.message}\n        />\n        <CardContainer>\n        {this.shuffleCards(this.state.cards).map(card => (\n          <GameCard\n            cardClick={this.cardClick}\n            id={card.id}\n            key={card.id}\n            name={card.name}\n            image={card.image}\n          />\n        ))}\n        </CardContainer>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}